// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.9.2
// source: confectioner.proto

package confectioner

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ConfectionerProfileImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId   string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	ImagePath string `protobuf:"bytes,2,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
}

func (x *ConfectionerProfileImage) Reset() {
	*x = ConfectionerProfileImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfectionerProfileImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfectionerProfileImage) ProtoMessage() {}

func (x *ConfectionerProfileImage) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfectionerProfileImage.ProtoReflect.Descriptor instead.
func (*ConfectionerProfileImage) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{0}
}

func (x *ConfectionerProfileImage) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *ConfectionerProfileImage) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

type Confectioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName     string                      `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName    string                      `protobuf:"bytes,3,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age           int32                       `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Introduction  string                      `protobuf:"bytes,5,opt,name=introduction,proto3" json:"introduction,omitempty"`
	PhoneNumber   string                      `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email         string                      `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	InstagramLink string                      `protobuf:"bytes,8,opt,name=instagram_link,json=instagramLink,proto3" json:"instagram_link,omitempty"`
	Password      string                      `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	TownId        int64                       `protobuf:"varint,10,opt,name=town_id,json=townId,proto3" json:"town_id,omitempty"`
	ProfilePhoto  []*ConfectionerProfileImage `protobuf:"bytes,11,rep,name=profile_photo,json=profilePhoto,proto3" json:"profile_photo,omitempty"`
}

func (x *Confectioner) Reset() {
	*x = Confectioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Confectioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Confectioner) ProtoMessage() {}

func (x *Confectioner) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Confectioner.ProtoReflect.Descriptor instead.
func (*Confectioner) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{1}
}

func (x *Confectioner) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Confectioner) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Confectioner) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *Confectioner) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Confectioner) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *Confectioner) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Confectioner) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Confectioner) GetInstagramLink() string {
	if x != nil {
		return x.InstagramLink
	}
	return ""
}

func (x *Confectioner) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Confectioner) GetTownId() int64 {
	if x != nil {
		return x.TownId
	}
	return 0
}

func (x *Confectioner) GetProfilePhoto() []*ConfectionerProfileImage {
	if x != nil {
		return x.ProfilePhoto
	}
	return nil
}

type CreateConfectionerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName     string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName    string `protobuf:"bytes,2,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age           int32  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Introduction  string `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction,omitempty"`
	PhoneNumber   string `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email         string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	InstagramLink string `protobuf:"bytes,7,opt,name=instagram_link,json=instagramLink,proto3" json:"instagram_link,omitempty"`
	Password      string `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	TownId        int64  `protobuf:"varint,9,opt,name=town_id,json=townId,proto3" json:"town_id,omitempty"`
}

func (x *CreateConfectionerRequest) Reset() {
	*x = CreateConfectionerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConfectionerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfectionerRequest) ProtoMessage() {}

func (x *CreateConfectionerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfectionerRequest.ProtoReflect.Descriptor instead.
func (*CreateConfectionerRequest) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{2}
}

func (x *CreateConfectionerRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateConfectionerRequest) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *CreateConfectionerRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *CreateConfectionerRequest) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CreateConfectionerRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateConfectionerRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateConfectionerRequest) GetInstagramLink() string {
	if x != nil {
		return x.InstagramLink
	}
	return ""
}

func (x *CreateConfectionerRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateConfectionerRequest) GetTownId() int64 {
	if x != nil {
		return x.TownId
	}
	return 0
}

type CreateConfectionerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfectionerId int64 `protobuf:"varint,1,opt,name=confectioner_id,json=confectionerId,proto3" json:"confectioner_id,omitempty"`
}

func (x *CreateConfectionerResponse) Reset() {
	*x = CreateConfectionerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConfectionerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfectionerResponse) ProtoMessage() {}

func (x *CreateConfectionerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfectionerResponse.ProtoReflect.Descriptor instead.
func (*CreateConfectionerResponse) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{3}
}

func (x *CreateConfectionerResponse) GetConfectionerId() int64 {
	if x != nil {
		return x.ConfectionerId
	}
	return 0
}

type UpdateConfectionerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName     string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName    string `protobuf:"bytes,3,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age           int32  `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Introduction  string `protobuf:"bytes,5,opt,name=introduction,proto3" json:"introduction,omitempty"`
	PhoneNumber   string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email         string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	InstagramLink string `protobuf:"bytes,8,opt,name=instagram_link,json=instagramLink,proto3" json:"instagram_link,omitempty"`
	TownId        int64  `protobuf:"varint,10,opt,name=town_id,json=townId,proto3" json:"town_id,omitempty"`
}

func (x *UpdateConfectionerRequest) Reset() {
	*x = UpdateConfectionerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfectionerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfectionerRequest) ProtoMessage() {}

func (x *UpdateConfectionerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfectionerRequest.ProtoReflect.Descriptor instead.
func (*UpdateConfectionerRequest) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateConfectionerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateConfectionerRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateConfectionerRequest) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *UpdateConfectionerRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UpdateConfectionerRequest) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *UpdateConfectionerRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateConfectionerRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateConfectionerRequest) GetInstagramLink() string {
	if x != nil {
		return x.InstagramLink
	}
	return ""
}

func (x *UpdateConfectionerRequest) GetTownId() int64 {
	if x != nil {
		return x.TownId
	}
	return 0
}

type UpdateConfectionerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated bool `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UpdateConfectionerResponse) Reset() {
	*x = UpdateConfectionerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfectionerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfectionerResponse) ProtoMessage() {}

func (x *UpdateConfectionerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfectionerResponse.ProtoReflect.Descriptor instead.
func (*UpdateConfectionerResponse) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateConfectionerResponse) GetUpdated() bool {
	if x != nil {
		return x.Updated
	}
	return false
}

type DeleteConfectionerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfectionerId int64 `protobuf:"varint,1,opt,name=confectioner_id,json=confectionerId,proto3" json:"confectioner_id,omitempty"`
}

func (x *DeleteConfectionerRequest) Reset() {
	*x = DeleteConfectionerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfectionerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfectionerRequest) ProtoMessage() {}

func (x *DeleteConfectionerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfectionerRequest.ProtoReflect.Descriptor instead.
func (*DeleteConfectionerRequest) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteConfectionerRequest) GetConfectionerId() int64 {
	if x != nil {
		return x.ConfectionerId
	}
	return 0
}

type DeleteConfectionerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *DeleteConfectionerResponse) Reset() {
	*x = DeleteConfectionerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfectionerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfectionerResponse) ProtoMessage() {}

func (x *DeleteConfectionerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfectionerResponse.ProtoReflect.Descriptor instead.
func (*DeleteConfectionerResponse) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteConfectionerResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type GetConfectionerByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfectionerId int64 `protobuf:"varint,1,opt,name=confectioner_id,json=confectionerId,proto3" json:"confectioner_id,omitempty"`
}

func (x *GetConfectionerByIdRequest) Reset() {
	*x = GetConfectionerByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfectionerByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfectionerByIdRequest) ProtoMessage() {}

func (x *GetConfectionerByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfectionerByIdRequest.ProtoReflect.Descriptor instead.
func (*GetConfectionerByIdRequest) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{8}
}

func (x *GetConfectionerByIdRequest) GetConfectionerId() int64 {
	if x != nil {
		return x.ConfectionerId
	}
	return 0
}

type GetConfectionerByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confectioner *Confectioner `protobuf:"bytes,1,opt,name=confectioner,proto3" json:"confectioner,omitempty"`
}

func (x *GetConfectionerByIdResponse) Reset() {
	*x = GetConfectionerByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfectionerByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfectionerByIdResponse) ProtoMessage() {}

func (x *GetConfectionerByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfectionerByIdResponse.ProtoReflect.Descriptor instead.
func (*GetConfectionerByIdResponse) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{9}
}

func (x *GetConfectionerByIdResponse) GetConfectioner() *Confectioner {
	if x != nil {
		return x.Confectioner
	}
	return nil
}

type GetConfectionersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confectioners []*Confectioner `protobuf:"bytes,1,rep,name=confectioners,proto3" json:"confectioners,omitempty"`
}

func (x *GetConfectionersResponse) Reset() {
	*x = GetConfectionersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confectioner_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfectionersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfectionersResponse) ProtoMessage() {}

func (x *GetConfectionersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_confectioner_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfectionersResponse.ProtoReflect.Descriptor instead.
func (*GetConfectionersResponse) Descriptor() ([]byte, []int) {
	return file_confectioner_proto_rawDescGZIP(), []int{10}
}

func (x *GetConfectionersResponse) GetConfectioners() []*Confectioner {
	if x != nil {
		return x.Confectioners
	}
	return nil
}

var File_confectioner_proto protoreflect.FileDescriptor

var file_confectioner_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x54, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xf6, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x77, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x77, 0x6e, 0x49,
	0x64, 0x12, 0x4b, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0xa6,
	0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x6f, 0x77, 0x6e, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9a,
	0x02, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x77, 0x6e, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x22, 0x45, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x72, 0x73, 0x32, 0x9a, 0x04, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x27, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_confectioner_proto_rawDescOnce sync.Once
	file_confectioner_proto_rawDescData = file_confectioner_proto_rawDesc
)

func file_confectioner_proto_rawDescGZIP() []byte {
	file_confectioner_proto_rawDescOnce.Do(func() {
		file_confectioner_proto_rawDescData = protoimpl.X.CompressGZIP(file_confectioner_proto_rawDescData)
	})
	return file_confectioner_proto_rawDescData
}

var file_confectioner_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_confectioner_proto_goTypes = []interface{}{
	(*ConfectionerProfileImage)(nil),    // 0: confectioner.ConfectionerProfileImage
	(*Confectioner)(nil),                // 1: confectioner.Confectioner
	(*CreateConfectionerRequest)(nil),   // 2: confectioner.CreateConfectionerRequest
	(*CreateConfectionerResponse)(nil),  // 3: confectioner.CreateConfectionerResponse
	(*UpdateConfectionerRequest)(nil),   // 4: confectioner.UpdateConfectionerRequest
	(*UpdateConfectionerResponse)(nil),  // 5: confectioner.UpdateConfectionerResponse
	(*DeleteConfectionerRequest)(nil),   // 6: confectioner.DeleteConfectionerRequest
	(*DeleteConfectionerResponse)(nil),  // 7: confectioner.DeleteConfectionerResponse
	(*GetConfectionerByIdRequest)(nil),  // 8: confectioner.GetConfectionerByIdRequest
	(*GetConfectionerByIdResponse)(nil), // 9: confectioner.GetConfectionerByIdResponse
	(*GetConfectionersResponse)(nil),    // 10: confectioner.GetConfectionersResponse
	(*empty.Empty)(nil),                 // 11: google.protobuf.Empty
}
var file_confectioner_proto_depIdxs = []int32{
	0,  // 0: confectioner.Confectioner.profile_photo:type_name -> confectioner.ConfectionerProfileImage
	1,  // 1: confectioner.GetConfectionerByIdResponse.confectioner:type_name -> confectioner.Confectioner
	1,  // 2: confectioner.GetConfectionersResponse.confectioners:type_name -> confectioner.Confectioner
	8,  // 3: confectioner.ConfectionerService.GetConfectionerById:input_type -> confectioner.GetConfectionerByIdRequest
	11, // 4: confectioner.ConfectionerService.GetConfectioners:input_type -> google.protobuf.Empty
	2,  // 5: confectioner.ConfectionerService.CreateConfectioner:input_type -> confectioner.CreateConfectionerRequest
	4,  // 6: confectioner.ConfectionerService.UpdateConfectioner:input_type -> confectioner.UpdateConfectionerRequest
	6,  // 7: confectioner.ConfectionerService.DeleteConfectioner:input_type -> confectioner.DeleteConfectionerRequest
	9,  // 8: confectioner.ConfectionerService.GetConfectionerById:output_type -> confectioner.GetConfectionerByIdResponse
	10, // 9: confectioner.ConfectionerService.GetConfectioners:output_type -> confectioner.GetConfectionersResponse
	3,  // 10: confectioner.ConfectionerService.CreateConfectioner:output_type -> confectioner.CreateConfectionerResponse
	5,  // 11: confectioner.ConfectionerService.UpdateConfectioner:output_type -> confectioner.UpdateConfectionerResponse
	7,  // 12: confectioner.ConfectionerService.DeleteConfectioner:output_type -> confectioner.DeleteConfectionerResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_confectioner_proto_init() }
func file_confectioner_proto_init() {
	if File_confectioner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_confectioner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfectionerProfileImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Confectioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConfectionerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConfectionerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfectionerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfectionerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfectionerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfectionerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfectionerByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfectionerByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confectioner_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfectionersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_confectioner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_confectioner_proto_goTypes,
		DependencyIndexes: file_confectioner_proto_depIdxs,
		MessageInfos:      file_confectioner_proto_msgTypes,
	}.Build()
	File_confectioner_proto = out.File
	file_confectioner_proto_rawDesc = nil
	file_confectioner_proto_goTypes = nil
	file_confectioner_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConfectionerServiceClient is the client API for ConfectionerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfectionerServiceClient interface {
	GetConfectionerById(ctx context.Context, in *GetConfectionerByIdRequest, opts ...grpc.CallOption) (*GetConfectionerByIdResponse, error)
	GetConfectioners(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetConfectionersResponse, error)
	CreateConfectioner(ctx context.Context, in *CreateConfectionerRequest, opts ...grpc.CallOption) (*CreateConfectionerResponse, error)
	UpdateConfectioner(ctx context.Context, in *UpdateConfectionerRequest, opts ...grpc.CallOption) (*UpdateConfectionerResponse, error)
	DeleteConfectioner(ctx context.Context, in *DeleteConfectionerRequest, opts ...grpc.CallOption) (*DeleteConfectionerResponse, error)
}

type confectionerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewConfectionerServiceClient(cc grpc.ClientConnInterface) ConfectionerServiceClient {
	return &confectionerServiceClient{cc}
}

func (c *confectionerServiceClient) GetConfectionerById(ctx context.Context, in *GetConfectionerByIdRequest, opts ...grpc.CallOption) (*GetConfectionerByIdResponse, error) {
	out := new(GetConfectionerByIdResponse)
	err := c.cc.Invoke(ctx, "/confectioner.ConfectionerService/GetConfectionerById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *confectionerServiceClient) GetConfectioners(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetConfectionersResponse, error) {
	out := new(GetConfectionersResponse)
	err := c.cc.Invoke(ctx, "/confectioner.ConfectionerService/GetConfectioners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *confectionerServiceClient) CreateConfectioner(ctx context.Context, in *CreateConfectionerRequest, opts ...grpc.CallOption) (*CreateConfectionerResponse, error) {
	out := new(CreateConfectionerResponse)
	err := c.cc.Invoke(ctx, "/confectioner.ConfectionerService/CreateConfectioner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *confectionerServiceClient) UpdateConfectioner(ctx context.Context, in *UpdateConfectionerRequest, opts ...grpc.CallOption) (*UpdateConfectionerResponse, error) {
	out := new(UpdateConfectionerResponse)
	err := c.cc.Invoke(ctx, "/confectioner.ConfectionerService/UpdateConfectioner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *confectionerServiceClient) DeleteConfectioner(ctx context.Context, in *DeleteConfectionerRequest, opts ...grpc.CallOption) (*DeleteConfectionerResponse, error) {
	out := new(DeleteConfectionerResponse)
	err := c.cc.Invoke(ctx, "/confectioner.ConfectionerService/DeleteConfectioner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfectionerServiceServer is the server API for ConfectionerService service.
type ConfectionerServiceServer interface {
	GetConfectionerById(context.Context, *GetConfectionerByIdRequest) (*GetConfectionerByIdResponse, error)
	GetConfectioners(context.Context, *empty.Empty) (*GetConfectionersResponse, error)
	CreateConfectioner(context.Context, *CreateConfectionerRequest) (*CreateConfectionerResponse, error)
	UpdateConfectioner(context.Context, *UpdateConfectionerRequest) (*UpdateConfectionerResponse, error)
	DeleteConfectioner(context.Context, *DeleteConfectionerRequest) (*DeleteConfectionerResponse, error)
}

// UnimplementedConfectionerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConfectionerServiceServer struct {
}

func (*UnimplementedConfectionerServiceServer) GetConfectionerById(context.Context, *GetConfectionerByIdRequest) (*GetConfectionerByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfectionerById not implemented")
}
func (*UnimplementedConfectionerServiceServer) GetConfectioners(context.Context, *empty.Empty) (*GetConfectionersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfectioners not implemented")
}
func (*UnimplementedConfectionerServiceServer) CreateConfectioner(context.Context, *CreateConfectionerRequest) (*CreateConfectionerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConfectioner not implemented")
}
func (*UnimplementedConfectionerServiceServer) UpdateConfectioner(context.Context, *UpdateConfectionerRequest) (*UpdateConfectionerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConfectioner not implemented")
}
func (*UnimplementedConfectionerServiceServer) DeleteConfectioner(context.Context, *DeleteConfectionerRequest) (*DeleteConfectionerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteConfectioner not implemented")
}

func RegisterConfectionerServiceServer(s *grpc.Server, srv ConfectionerServiceServer) {
	s.RegisterService(&_ConfectionerService_serviceDesc, srv)
}

func _ConfectionerService_GetConfectionerById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfectionerByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfectionerServiceServer).GetConfectionerById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confectioner.ConfectionerService/GetConfectionerById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfectionerServiceServer).GetConfectionerById(ctx, req.(*GetConfectionerByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfectionerService_GetConfectioners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfectionerServiceServer).GetConfectioners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confectioner.ConfectionerService/GetConfectioners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfectionerServiceServer).GetConfectioners(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfectionerService_CreateConfectioner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConfectionerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfectionerServiceServer).CreateConfectioner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confectioner.ConfectionerService/CreateConfectioner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfectionerServiceServer).CreateConfectioner(ctx, req.(*CreateConfectionerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfectionerService_UpdateConfectioner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateConfectionerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfectionerServiceServer).UpdateConfectioner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confectioner.ConfectionerService/UpdateConfectioner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfectionerServiceServer).UpdateConfectioner(ctx, req.(*UpdateConfectionerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfectionerService_DeleteConfectioner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConfectionerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfectionerServiceServer).DeleteConfectioner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confectioner.ConfectionerService/DeleteConfectioner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfectionerServiceServer).DeleteConfectioner(ctx, req.(*DeleteConfectionerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfectionerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "confectioner.ConfectionerService",
	HandlerType: (*ConfectionerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfectionerById",
			Handler:    _ConfectionerService_GetConfectionerById_Handler,
		},
		{
			MethodName: "GetConfectioners",
			Handler:    _ConfectionerService_GetConfectioners_Handler,
		},
		{
			MethodName: "CreateConfectioner",
			Handler:    _ConfectionerService_CreateConfectioner_Handler,
		},
		{
			MethodName: "UpdateConfectioner",
			Handler:    _ConfectionerService_UpdateConfectioner_Handler,
		},
		{
			MethodName: "DeleteConfectioner",
			Handler:    _ConfectionerService_DeleteConfectioner_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "confectioner.proto",
}
